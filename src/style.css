.has-error {
  border-color: red;
}

.multi-input > * {
  margin-bottom: 0.4em;
}

.single-input {
  /* display: flex; */
  width: fit-content;
  padding: 0.3em;
  border-radius: 0.4em;
  background-color: gainsboro;
  cursor: pointer;
}

.single-input > * > * > *:not(:first-child), .single-input > *:not(:first-child) {
  margin-left: 0.4em;
}

/* * > *:not(:first-child) {
  margin-left: 0.4em;
} */

.common-element {
  background-color: gainsboro;
  border-radius: 0.4em;
  padding: 0.4em;
  width: fit-content;
}

input[type=button] {
  background-color: gainsboro;
  border-radius: 0.4em;
}

.single-input input.text {
  font-family: monospace;
  resize: both;
  border-radius: 0.4em;
}

.single-input .constraint {
  margin-left: 0.4em;
}

.single-input .updating {
  opacity: 0.3;
}

.split-input-block .single-input + .single-input {
  margin-top: 0.4em;
}

.split-input-block {
  /* padding: 0.4em; */
  /* border-radius: 0.4em; */
}

.single-input .close {
  background-color:pink;
  border-radius: 0.4em;
}

.single-input .newline {
  background-color:palegreen;
  border-radius: 0.4em;
}

.single-input.focused {
  background-color:skyblue;
}

.single-input input[type=button].info {
  background-color: gainsboro;
  border-radius: 0.4em;
}

.error {
  color: red;
}

input[type=button].generate {
  background-color: gainsboro;
  border-radius: 0.4em;
  background-color:rgb(195, 228, 255);
}

input[type=button].options {
  background-color: gainsboro;
  border-radius: 0.4em;
  margin-left: 0.4em;
}

.model-container table {
  margin-top: 0.4em;
  border-collapse: collapse;
  border: solid black;
  border-radius: 0.4em;
}

.model-container table thead th {
  /* border: solid black; */
  border-bottom: solid black;
  padding: 0.2em;
}

.model-container table tbody tr {
  border: solid black;
}

.model-container table tbody tr td {
  /* border: solid black; */
  text-align: center;
  padding: 0.2em;
}

.model-container table tr .dv {
  border-right: solid black;
}

.model-finder {
  border-radius: 0.4em;
  margin-top: 0.4em;
  background-color: rgb(240, 240, 240);
  width: fit-content;
  padding: 0.4em;
}

.invalidated {
  /* background-color: lightgoldenrodyellow; */
  opacity: 0.5;
}

.button-line {
  display: flex;
  justify-content: space-between;
}

input::file-selector-button {
  background-color: gainsboro;
  border-radius: 0.4em;
  margin-bottom: 0.4em;
}

.model-evaluators {
  margin-left: 0.8em;
}

.model-input {
  background-color: rgb(240, 240, 240);
  padding: 0.4em;
  width: fit-content;
  border-radius: 0.4em;
}

.info-container {
  /* margin-top: 0.4em; */
}

.generic-input-block {
  border-radius: 0.4em;
  padding: 0.4em;
  background-color: rgb(240, 240, 240);
}

.generic-input-block * + * {
  /* margin-top: 0.4em; */
}

.single-input {
  margin-top: 0.4em;
}

.input-instructions {
  white-space: pre-wrap;
  margin-top: 0.4em;
}

.yields {
  color:darkcyan;
}

.copy-message {
  display: none;
}

/* https://stackoverflow.com/questions/11660710/css-transition-fade-in */
.copy-message.show {
  display: inline;
  opacity: 0;

  animation-name: fadeInOpacity;
  animation-iteration-count: 1;
  animation-timing-function: ease-out;
  animation-duration: 0.8s;
}

@keyframes fadeInOpacity {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}
